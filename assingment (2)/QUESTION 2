#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

struct Node* merge(struct Node* list1, struct Node* list2) {
    struct Node* merged = NULL;
    struct Node* tail = NULL;

    while (list1 != NULL && list2 != NULL) {
        struct Node* temp;
        if (list1->data <= list2->data) {
            temp = list1;
            list1 = list1->next;
        } else {
            temp = list2;
            list2 = list2->next;
        }
        if (merged == NULL) {
            merged = temp;
            tail = temp;
        } else {
            tail->next = temp;
            tail = temp;
        }
    }

    if (list1 != NULL) {
        tail->next = list1;
    }
    if (list2 != NULL) {
        tail->next = list2;
    }

    return merged;
}

void printList(struct Node* head) {
    while (head != NULL) {
        printf("%d ", head->data);
        head = head->next;
    }
    printf("\n");
}

int main() {
    struct Node* list1 = createNode(1);
    list1->next = createNode(3);
    list1->next->next = createNode(5);

    struct Node* list2 = createNode(2);
    list2->next = createNode(4);
    list2->next->next = createNode(6);

    struct Node* mergedList = merge(list1, list2);

    printList(mergedList);

    return 0;
}